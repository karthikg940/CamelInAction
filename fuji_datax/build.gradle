buildscript {
	ext {
		springBootVersion = '1.4.0.RELEASE'
	}
	repositories {
		maven { url 'http://repo1.maven.org/maven2/'}
		maven { url 'http://repo.spring.io/milestone' }
	    maven { url 'http://repo.spring.io/snapshot' }
		mavenLocal()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('org.liquibase:liquibase-gradle-plugin:1.1.1') {
            exclude(module: 'liquibase-core')   // exclude the dependency on liquibase-core:3.3.5
        }
    }
}

subprojects {
	repositories {
		maven { url 'http://repo.maven.apache.org/maven2' }
		jcenter { url "http://jcenter.bintray.com/" }
		maven { url 'http://repo.spring.io/milestone' }
		maven { url 'http://repo.spring.io/snapshot' }
		maven { url 'http://repository.jboss.org/nexus/content/repositories/releases' }
		maven { url 'http://oss.sonatype.org/content/repositories/releases' }
		maven { url 'http://oss.sonatype.org/content/repositories/snapshots' }
		maven { url "http://plugins.gradle.org/m2/"}
		maven {url "http://www.dcm4che.org/maven2/"} 
		mavenLocal()
	}


	apply plugin: 'groovy'
	apply plugin: 'eclipse'
	apply plugin: 'jacoco'
	apply plugin: 'spring-boot'
//	apply plugin: 'io.spring.dependency-management'
	apply plugin: 'org.liquibase.gradle'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8

    dependencies {
		compile('org.springframework.cloud:spring-cloud-starter-eureka')
		compile('org.springframework.cloud:spring-cloud-starter-feign')
		compile('org.springframework.boot:spring-boot-starter-data-jpa')
		compile('org.springframework.boot:spring-boot-starter-aop')
		compile group: 'org.apache.shiro', name: 'shiro-core', version: '1.3.2'
		compile group: 'org.apache.shiro', name: 'shiro-web', version: '1.3.2'
		compile group: 'org.apache.shiro', name:'shiro-spring', version: '1.3.2'
		compile('org.springframework.boot:spring-boot-starter-web')
		compile('org.codehaus.groovy:groovy')
		compile group: 'org.codehaus.groovy', name: 'groovy-json'
		compile('mysql:mysql-connector-java')

		testCompile('org.springframework.boot:spring-boot-starter-test')
		testCompile 'org.spockframework:spock-core'
		testCompile 'org.spockframework:spock-spring'
		testCompile('org.liquibase:liquibase-core')
		testRuntime('com.h2database:h2')
    }

	configurations {
    all*.exclude module: 'slf4j-log4j12'
	}
	
    dependencyManagement {
        imports {mavenBom "org.springframework.cloud:spring-cloud-dependencies:Brixton.SR5"}
    }
    
	tasks.withType(Test) {
    	systemProperty 'eureka.client.enabled', 'false'
	}    
	test {
		systemProperty 'spring.profiles.active', 'test'
	}

//	liquibase {
//		enabled = false
//	}
	
	jacocoTestReport {
		group = "Reporting"
		reports {
			xml.enabled true
			csv.enabled false
			html.destination "${buildDir}/reports/coverage"
		}
	}
}

